# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - main

pr:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonar-cloud-trivia'
    organization: '2102-feb08-net'
    scannerMode: 'MSBuild'
    projectKey: '2102-feb08-net_TriviaRank-Server'
    projectName: 'TriviaRank'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  workingDirectory: TriviaServer

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    arguments: '--configuration $(buildConfiguration) --collect "xplat code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
    workingDirectory: 'TriviaServer/TriviaServer.Tests'
    publishTestResults: true

- task: SonarCloudAnalyze@1
  displayName: Sonar Cloud Analysis

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage report
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(Build.BuildId)'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(3108cf2f-4c35-4864-8dad-b97042f1dd42)'
    appType: 'webApp'
    WebAppName: 'TriviaRank-Server'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'